version: "3"

services:
  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - net

  portainer:
    container_name: portainer
    image: portainer/portainer
    ports:
      - "${PORTAINER_HTTP_PORT:-9000}:9000"
    restart: always
    # command: ["--admin-password-file", "/tmp/portainer_password"]
    volumes:
      # - ./config/portainer/portainer_password:/tmp/portainer_password
      - ./data/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - net

  # rabbitmq:
  #   container_name: rabbitmq
  #   image: rabbitmq:3-management-alpine
  #   ports:
  #     - "${RABBITMQ_DEFAULT_PORT:-5672}:5672"
  #     - "${RABBITMQ_DEFAULT_PORT_MONITOR:-15672}:15672"
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-root}
  #     - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-123456}
  #   networks:
  #     - net

  konga:
    container_name: konga
    image: pantsel/konga
    ports:
      - "${KONGA_PORT:-1337}:1337"
    volumes:
      - ./config/konga:/opt/konga:ro
    restart: always
    environment:
      - NODE_ENV=${KONGA_NODE_ENV:-development}
      - DB_ADAPTER=postgres
      - DB_HOST=postgres
      - DB_USER=${POSTGRES_USER:-root}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-123456}
      - DB_DATABASE=konga
      - KONGA_SEED_USER_DATA_SOURCE_FILE=/opt/konga/userdb.js
      - KONGA_SEED_KONG_NODE_DATA_SOURCE_FILE=/opt/konga/kong_node.js
      - KONGA_ADMIN_PASSWORD=${KONGA_ADMIN_PASSWORD:-123456}
      - KONGA_MONITOR_PASSWORD=${KONGA_MONITOR_PASSWORD:-123456}
    depends_on:
      - postgres
      - kong
    networks:
      - net

  kong-bootstrap:
    container_name: kong-bootstrap
    image: kong:alpine
    restart: on-failure
    command: kong migrations bootstrap
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=postgres
      - KONG_PG_USER=${POSTGRES_USER:-root}
      - KONG_PG_PASSWORD=${POSTGRES_PASSWORD:-123456}
      - KONG_PG_DATABASE=kong
    networks:
      - net
    depends_on:
      - postgres

  kong:
    container_name: kong
    image: kong:alpine
    restart: always
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    command: kong start
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=postgres
      - KONG_PG_USER=${POSTGRES_USER:-root}
      - KONG_PG_PASSWORD=${POSTGRES_PASSWORD:-123456}
      - KONG_PG_DATABASE=kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_DECLARATIVE_CONFIG=/opt/kong/kong.yml
    volumes:
      - ./config/kong/kong.yml:/opt/kong/kong.yml
    depends_on:
      - kong-bootstrap
    networks:
      - net

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "${ADMINER_PORT:-8081}:8080"
    environment:
      - ADMINER_DESIGN=pokorny
    volumes:
      - ./config/adminer/plugins:/var/www/html/plugins-enabled:ro
    networks:
      - net
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:11-alpine # Konga can't connect to postgres-12+
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./utils/postgres:/docker-entrypoint-initdb.d:ro
      - ./data/db:/data/db
      - ./data/postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES="kong","konga","user"
      - POSTGRES_USER=${POSTGRES_USER:-root}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123456}
    networks:
      - net

networks:
  net:
    driver: bridge
